.container-fluid

  p
    strong Nickname:
    = @player.nickname
  p
    strong rating_points points:
    = @player.rating_points

  #player_rating_plot

  = link_to 'Edit', edit_player_path(@player)
  '|
  = link_to 'Back', players_path

javascript:
  var formatDate = d3.time.format("%Y-%m-%d %H:%M");
  var parseDate = d3.time.format("%Y-%m-%d %H:%M:%S").parse;

  var data = gon.player.plot_data

  data.forEach(function(item){
    item.date = formatDate.parse(item.date);
  });

  var margin = {top: 20, right: 20, bottom: 30, left: 50};
  var width = ($(window).width()*0.9) - margin.left - margin.right;
  var height = 500 - margin.top - margin.bottom;

  var x = d3.time.scale().range([0, width]);

  var y = d3.scale.linear()
      .range([height, 0]);

  var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom")
      .tickFormat(d3.time.format("%m-%d"));

  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left");

  var line = d3.svg.line()
      .interpolate("basis")
      .x(function(d) { return x(d.date); })
      .y(function(d) { return y(d.score); });

  var svg = d3.select("#player_rating_plot").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  x.domain(d3.extent(data, function(d) { return d.date; }));
  y.domain(d3.extent(data, function(d) { return d.score; }));

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Rating points");

  svg.append("path")
      .datum(data)
      .attr("class", "line")
      .attr("d", line);

coffee:
  $(document).on 'page:before-change', ->
    d3.select("svg").remove()
